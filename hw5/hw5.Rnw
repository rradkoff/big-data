\documentclass[11pt, fleqn]{article}
\input{header.tex}

\newtheorem{rlabel}{R-Snippet}
\crefname{rlabel}{r-snippet}{r-snippets}
\Crefname{rlabel}{R-Snippet}{R-Snippets}

\setlength{\parskip}{12pt} % Sets a blank line in between paragraphs
\setlength\parindent{0pt} % Sets the indent for each paragraph to zero

\title{Big Data HW \#5}
\author{Will Clark \& Matthew DeLio \\ 41201-01}
\date{\today}

\begin{document}
\maketitle

<<setup, include=FALSE>>=
library(knitr)
knit_hooks$set(rlabel = function(before, options, envir) {
  if (before) sprintf('\\begin{rlabel}\\label{r:%s}\\hfill{}', options$label) else '\\end{rlabel}'
})
opts_chunk$set(cache=TRUE, echo=FALSE, autodep=TRUE, results='hide', fig.align='center', out.width='.49\\linewidth')
@

<<start, include=FALSE>>=
## actors network example

library(igraph)

### GRAPH
## read in a graph in the `graphml' formal: xml for graphs.
## it warns about pre-specified ids, but we want this here
## (these ids match up with the castlists in movies.txt)
actnet <- read.graph("actors.graphml",format="graphml")
@

\section{Plotting the Actors' Network}
<<q1, include=FALSE>>=

@

\section{}
<<q3, include=FALSE>>=
### TRANSACTION
## read in the table of actor ids for movies
## this is a bit complex, because the movie names
## contain all sorts of special characters.
movies <- read.table("movies.txt", sep="\t", 
  row.names=1, as.is=TRUE, comment.char="", quote="")
## it's a 1 column matrix.  treat it like a vector
movies <- drop(as.matrix(movies))
## each element is a comma-separated set of actor ids.  
## use `strsplit' to break these out
movies <- strsplit(movies,",")
## and finally, match ids to names from actnet
casts <- lapply(movies, 
	function(m) V(actnet)$name[match(m,V(actnet)$id)])
## check it
casts['True Romance']
## format as arules transaction baskets
library(arules)
casttrans <- as(casts, "transactions")


## Set up STM information
castsize <- unlist(lapply(casts, function(m) length(m)))
## see ?rep.int: we're just repeating movie names for each cast member
acti <- factor(rep.int(names(casts),times=castsize))
## actors
actj <- factor(unlist(casts), levels=V(actnet)$name)
## format as STM (if you specify without `x', its binary 0/1)
actmat <- sparseMatrix(i=as.numeric(acti),j=as.numeric(actj),
		dimnames=list(movie=levels(acti),actor=levels(actj)))

## count the number of appearences by actor
nroles <- colSums(actmat)
names(nroles) <- colnames(actmat)
@



\Vref{r:start}

\section{Kevin Bacon}

\section{Appedix}
<<fig, fig.cap='two plots', fig.subcap=c('one plot', 'the other one')>>=
plot(1:10)
plot(rnorm(10), pch=19)
@

\section{Appendix}
<<start, ref.label='start', rlabel=TRUE, cache=FALSE, eval=FALSE, echo=TRUE>>=
@

\end{document}